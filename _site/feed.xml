<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-25T00:28:09+01:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">How to Build Successful ML Systems in Minimal Time</title><link href="http://localhost:4000/build-successful-ml-systems/" rel="alternate" type="text/html" title="How to Build Successful ML Systems in Minimal Time" /><published>2020-05-17T00:00:00+01:00</published><updated>2020-05-17T00:00:00+01:00</updated><id>http://localhost:4000/build%20successful%20ml%20systems</id><content type="html" xml:base="http://localhost:4000/build-successful-ml-systems/">&lt;p&gt;When building Machine Learning systems , a Data Engineer has to iterate between a number of compulsory to optional processes. How they do this determines the resources(time) that is consumed in training the model. Should you focus more on collecting lots of data for your system or are there more important things?&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-240px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;codes&quot;&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;action_page.php&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;firstname&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mickey&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Last&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lastname&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mouse&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Submit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;/div&gt;</content><author><name>Chel</name></author><summary type="html">When building Machine Learning systems , a Data Engineer has to iterate between a number of compulsory to optional processes. How they do this determines the resources(time) that is consumed in training the model. Should you focus more on collecting lots of data for your system or are there more important things?</summary></entry><entry><title type="html">Bananas</title><link href="http://localhost:4000/bananas/" rel="alternate" type="text/html" title="Bananas" /><published>2020-05-17T00:00:00+01:00</published><updated>2020-05-17T00:00:00+01:00</updated><id>http://localhost:4000/bananas</id><content type="html" xml:base="http://localhost:4000/bananas/">&lt;p&gt;When building Machine Learning systems , a Data Engineer has to iterate between a number of compulsory to optional processes. How they do this determines the resources(time) that is consumed in training the model. Should you focus more on collecting lots of data for your system or are there more important things?&lt;/p&gt;</content><author><name>Chel</name></author><summary type="html">When building Machine Learning systems , a Data Engineer has to iterate between a number of compulsory to optional processes. How they do this determines the resources(time) that is consumed in training the model. Should you focus more on collecting lots of data for your system or are there more important things?</summary></entry><entry><title type="html">Understanding Learning Curves for the Training and Validation sets</title><link href="http://localhost:4000/apples/" rel="alternate" type="text/html" title="Understanding Learning Curves for the Training and Validation sets" /><published>2020-05-16T00:00:00+01:00</published><updated>2020-05-16T00:00:00+01:00</updated><id>http://localhost:4000/apples</id><content type="html" xml:base="http://localhost:4000/apples/">&lt;p&gt;After successfully training a model, we all want it to be as perfect as possible. The way we do this is in Machine Learning is minimizing the error loss on our dataset. But theres a catch, what if we end up overfitting our training set and our learned algorithm fails to generalize on new data. Learn how to balance Learning curves with the Validation set&lt;/p&gt;</content><author><name>Chel</name></author><summary type="html">After successfully training a model, we all want it to be as perfect as possible. The way we do this is in Machine Learning is minimizing the error loss on our dataset. But theres a catch, what if we end up overfitting our training set and our learned algorithm fails to generalize on new data. Learn how to balance Learning curves with the Validation set</summary></entry><entry><title type="html">FIRST MACHINE LEARNING POST</title><link href="http://localhost:4000/kiwifruit/" rel="alternate" type="text/html" title="FIRST MACHINE LEARNING POST" /><published>2020-05-15T00:00:00+01:00</published><updated>2020-05-15T00:00:00+01:00</updated><id>http://localhost:4000/kiwifruit</id><content type="html" xml:base="http://localhost:4000/kiwifruit/">&lt;p&gt;First Machine Learning Post .. Outlining all the terms and concepts of ML, Where they are applied, and how to apply them for your own systems.&lt;/p&gt;</content><author><name>ted</name></author><summary type="html">First Machine Learning Post .. Outlining all the terms and concepts of ML, Where they are applied, and how to apply them for your own systems.</summary></entry></feed>